pragma solidity ^0.8.4;
// SPDX-License-Identifier: GPL-3.0-or-later
import '../IStorage.sol';

contract ZStorage1 is IStorage{
    string[] public zCoordinates;
    
    // set to onlyOwner()
    // check if value exists - 
    // HERE - ask for last 4 units ( they are null for some reason )
    constructor(){
        zCoordinates.push("");
        zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("0");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-4");
		zCoordinates.push("4");
		zCoordinates.push("-3");
		zCoordinates.push("3");
		zCoordinates.push("-2");
		zCoordinates.push("2");
		zCoordinates.push("-1");
		zCoordinates.push("1");
		zCoordinates.push("0");
		zCoordinates.push("-1");
    }
    function set(uint256 location, string calldata _unit) external {
        zCoordinates[location] = _unit;
    }
    function getById(uint256 id) external override returns (string memory unit) {
		return zCoordinates[id];
	}

}