pragma solidity ^0.8.4;
// SPDX-License-Identifier: GPL-3.0-or-later
import '../IStorage.sol';
contract LengthStorage1 is IStorage{
    string[] public lengths;
    
    // set to onlyOwner()
    // check if value exists - 
    constructor(){
       lengths.push("");
       lengths.push("Very Short"); //1
       lengths.push("");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Very Short");
       lengths.push("");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Long");
       lengths.push("Very Long");
       lengths.push("Long");
       lengths.push("Very Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Very Long");
       lengths.push("Very Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Very Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Very Long");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Very Short");
       lengths.push("");
       lengths.push("");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Very Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Very Short");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Very Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("");
       lengths.push("");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("");
       lengths.push("");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Very Long");
       lengths.push("Short");
       lengths.push("Very Short");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Very Long");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Very Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Very Short");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Very Long");
       lengths.push("Very Short");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("");
       lengths.push("Very Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("");
       lengths.push("Very Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Very Long");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Very Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Short");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Very Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Very Long");
       lengths.push("");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Short");
       lengths.push("Very Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Very Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Short");
       lengths.push("Short");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("");
       lengths.push("Short");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Medium");
       lengths.push("Long");
       lengths.push("Long");
       lengths.push("Medium");
       lengths.push("Medium");
    }
    function set(uint256 location, string calldata _unit) external {
        lengths[location] = _unit;
    }
    function getById(uint256 id) external override returns (string memory unit) {
		return lengths[id];
	}

}